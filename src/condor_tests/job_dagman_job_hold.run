#! /usr/bin/env perl
##**************************************************************
##
## Copyright (C) 1990-2007, Condor Team, Computer Sciences Department,
## University of Wisconsin-Madison, WI.
## 
## Licensed under the Apache License, Version 2.0 (the "License"); you
## may not use this file except in compliance with the License.  You may
## obtain a copy of the License at
## 
##    http://www.apache.org/licenses/LICENSE-2.0
## 
## Unless required by applicable law or agreed to in writing, software
## distributed under the License is distributed on an "AS IS" BASIS,
## WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
## See the License for the specific language governing permissions and
## limitations under the License.
##
##**************************************************************

use CondorTest;
use CondorUtils;
	CondorTest::debug("DIAG 1010\n");#TEMPTEMP

$cmd = 'job_dagman_job_hold.dag';
$testdesc =  'Condor submit dag - node job multi-hold test - scheduler U';
$testname = "job_dagman_job_hold";
$dagman_args = "-verbose";
	CondorTest::debug("DIAG 1020\n");#TEMPTEMP

#TEMPTEMP -- change this...
@outfiles = ("job_dagman_abort-A-node.A", "job_dagman_abort-A-node.B");

my $killedchosen = 0;

# truly const variables in perl
sub IDLE{1};
sub HELD{5};
sub RUNNING{2};

$abnormal = sub 
{
	die "Want to see only submit, execute and failed completion\n";
};

$aborted = sub 
{
	die "Abort event NOT expected\n";
};

$held = sub 
{
	die "Held event NOT expected\n";
};

$executed = sub
{
	my %info = @_;

	CondorTest::debug("Good. We need the dag to run<$info{cluster}>\n",1);
};

$submitted = sub
{
	CondorTest::debug("submitted: This test will see submit, executing and unsuccessful completion\n",1);
};

#TEMPTEMP -- lots of changes needed here...
$success = sub
{
	CondorTest::debug("executed successfully\n",1);
	die "DAG should fail!\n";
};

#TEMPTEMP -- changes here...
$failure = sub
{
	CondorTest::debug("DAG failed as expected\n",1);
	CondorTest::debug("Verifying output\n",1);
};

	CondorTest::debug("DIAG 1090\n");#TEMPTEMP
CondorTest::RegisterExitedSuccess( $testname, $success );
#TEMPTEMP CondorTest::RegisterExitedFailure( $testname, $failure );
CondorTest::RegisterExecute($testname, $executed );
CondorTest::RegisterExitedAbnormal( $testname, $abnormal );
CondorTest::RegisterAbort( $testname, $aborted );
CondorTest::RegisterHold( $testname, $held );
CondorTest::RegisterSubmit( $testname, $submitted );

if( CondorTest::RunDagTest($testname, $cmd, 0, $dagman_args) ) {
	CondorTest::debug("$testname: SUCCESS\n",1);
	exit(0);
} else {
	die "$testname: CondorTest::RunTest() failed\n";
}

