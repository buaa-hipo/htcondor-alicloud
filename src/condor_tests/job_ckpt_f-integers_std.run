#!/usr/bin/env perl
##**************************************************************
##
## Copyright (C) 1990-2007, Condor Team, Computer Sciences Department,
## University of Wisconsin-Madison, WI.
## 
## Licensed under the Apache License, Version 2.0 (the "License"); you
## may not use this file except in compliance with the License.  You may
## obtain a copy of the License at
## 
##    http://www.apache.org/licenses/LICENSE-2.0
## 
## Unless required by applicable law or agreed to in writing, software
## distributed under the License is distributed on an "AS IS" BASIS,
## WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
## See the License for the specific language governing permissions and
## limitations under the License.
##
##**************************************************************


use CondorTest;

$cmd = 'job_ckpt_f-integers_std.cmd';
$testdesc =  'Registers Test';
$testname = "job_ckpt_f-integers_std";

$foo  = <<"_EOX";
 About to checkpoint
 Returned from checkpoint
args:  35  35  35  35  35  35  35  35
args:  34  34  34  34  34  34  34  34
common: -35 -35 -35 -35 -35 -35 -35 -35
args:  33  33  33  33  33  33  33  33
common: -35 -35 -35 -35 -35 -35 -35 -35
args:  32  32  32  32  32  32  32  32
common: -35 -35 -35 -35 -35 -35 -35 -35
args:  31  31  31  31  31  31  31  31
common: -35 -35 -35 -35 -35 -35 -35 -35
args:  30  30  30  30  30  30  30  30
common: -35 -35 -35 -35 -35 -35 -35 -35
args:  29  29  29  29  29  29  29  29
common: -35 -35 -35 -35 -35 -35 -35 -35
args:  28  28  28  28  28  28  28  28
common: -35 -35 -35 -35 -35 -35 -35 -35
args:  27  27  27  27  27  27  27  27
common: -35 -35 -35 -35 -35 -35 -35 -35
args:  26  26  26  26  26  26  26  26
common: -35 -35 -35 -35 -35 -35 -35 -35
args:  25  25  25  25  25  25  25  25
common: -35 -35 -35 -35 -35 -35 -35 -35
args:  24  24  24  24  24  24  24  24
common: -35 -35 -35 -35 -35 -35 -35 -35
args:  23  23  23  23  23  23  23  23
common: -35 -35 -35 -35 -35 -35 -35 -35
args:  22  22  22  22  22  22  22  22
common: -35 -35 -35 -35 -35 -35 -35 -35
args:  21  21  21  21  21  21  21  21
common: -35 -35 -35 -35 -35 -35 -35 -35
args:  20  20  20  20  20  20  20  20
common: -35 -35 -35 -35 -35 -35 -35 -35
args:  19  19  19  19  19  19  19  19
common: -35 -35 -35 -35 -35 -35 -35 -35
args:  18  18  18  18  18  18  18  18
common: -35 -35 -35 -35 -35 -35 -35 -35
args:  17  17  17  17  17  17  17  17
common: -35 -35 -35 -35 -35 -35 -35 -35
args:  16  16  16  16  16  16  16  16
common: -35 -35 -35 -35 -35 -35 -35 -35
args:  15  15  15  15  15  15  15  15
common: -35 -35 -35 -35 -35 -35 -35 -35
args:  14  14  14  14  14  14  14  14
common: -35 -35 -35 -35 -35 -35 -35 -35
args:  13  13  13  13  13  13  13  13
common: -35 -35 -35 -35 -35 -35 -35 -35
args:  12  12  12  12  12  12  12  12
common: -35 -35 -35 -35 -35 -35 -35 -35
args:  11  11  11  11  11  11  11  11
common: -35 -35 -35 -35 -35 -35 -35 -35
args:  10  10  10  10  10  10  10  10
common: -35 -35 -35 -35 -35 -35 -35 -35
args:   9   9   9   9   9   9   9   9
common: -35 -35 -35 -35 -35 -35 -35 -35
args:   8   8   8   8   8   8   8   8
common: -35 -35 -35 -35 -35 -35 -35 -35
args:   7   7   7   7   7   7   7   7
common: -35 -35 -35 -35 -35 -35 -35 -35
args:   6   6   6   6   6   6   6   6
common: -35 -35 -35 -35 -35 -35 -35 -35
args:   5   5   5   5   5   5   5   5
common: -35 -35 -35 -35 -35 -35 -35 -35
args:   4   4   4   4   4   4   4   4
common: -35 -35 -35 -35 -35 -35 -35 -35
args:   3   3   3   3   3   3   3   3
common: -35 -35 -35 -35 -35 -35 -35 -35
args:   2   2   2   2   2   2   2   2
common: -35 -35 -35 -35 -35 -35 -35 -35
args:   1   1   1   1   1   1   1   1
common: -35 -35 -35 -35 -35 -35 -35 -35
args:   0   0   0   0   0   0   0   0
common: -35 -35 -35 -35 -35 -35 -35 -35
_EOX

my @expected_output = split '\n', $foo;
CondorTest::SetExpected(\@expected_output);

CondorTest::RegisterExitedSuccess( $testname,
                   \&CondorTest::DefaultOutputTest );
CondorTest::RegisterExitedFailure( $testname,
                   \&CondorTest::DefaultOutputTest );

# fortran can return success or failure, we don't check the return value.
CondorTest::RunTest($testname, $cmd, 0);
CondorTest::debug("$testname: SUCCESS\n",1);
exit(0);

