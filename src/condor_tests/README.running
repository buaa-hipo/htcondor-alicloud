**********************************************************************
Simple guide to running tests in the Condor test suite
**********************************************************************

1) Setup a Condor installation you want to run the tests with:
  - this is outside the scope of this document, find help elsewhere
  - so long as the condor tools in your PATH (namely condor_submit,
    condor_vacate, etc) all work, you should be in good shape...

						OR

   Let batch_test.pl set it up for you and use it. As of 10/2007,
   batch_test.pl has all the smarts even for the nightly builds and tests
   in the Build & Test Lab. If you add a "-b", it will use the binaries
   which it finds in your path and configure a personal condor(slightly
   tweaked in the config files) from the default config files in
   src/condor_examples and locate everythig in:

   				condor_tests/TestingPersonalCondor


2) Build some tests:
  - you can just type "make all" in the src/condor_tests directory
  - you can type "make <compiler>/Makefile" to build a subdirectory
    for a given compiler and the associated Makefile, so you can cd
    into that subdirectory and make tests specific to that compiler
  - you can just type "make <testname>" to build a given test (so long
    as that test has imake rules defined in the appropriate Imakefile
    for the directory you're trying to use -- see README.imake for
    details)


3) Execute a "run-file":

  All tests have a "<testname>.run" file which does whatever it has to
  do to run a given test.  Most of these are perl scripts that use the
  Condor.pm and CondorTest.pm perl modules to submit jobs to a Condor
  pool, optionally vacate the job asynchronously, etc.  These .run
  files are also responsible for verifying the output generated by the
  test (and other factors) to decide if the test passed or failed.


4) Run all the current nightly tests(default - list_quick):

	% ./batch_test.pl

5) Execute a bunch of tests all at once:

  If you want to run a bunch of tests all at once, you should use the
  "batch_test.pl" script.  With this script, you can:

	- Run all clipped port tests for Condor:
	  % ./batch_test.pl -dir . -file list_all

    - Recursively run all tests in all subdirectories:
      % ./batch_test.pl

    - Run all tests (every .run file) in a the current directory:
      % ./batch_test.pl -dir .

    - Run all tests in a given subdirectory:
      % ./batch_test.pl -dir gcc

    - Run a single test in the current directory:
      % ./batch_test.pl -dir . -test job_core_bigenv_van

    - Run a single test in a given subdirectory:
      % ./batch_test.pl -dir gcc -test job_ckpt_floats_std

    - Run all tests in the current directory listed in a file:
      % ./batch_test.pl -dir . -file list_critical

    - Run all tests in a given subdirectory listed in a file:
      % ./batch_test.pl -dir gcc -file gcc/list_quick

    - Run all tests in the current directory not listed in an exclude
      (or "skip") file:
      % ./batch_test.pl -dir . -skip list_slow

    - Run all tests in a given directory not listed in a skip file:
      % ./batch_test.pl -dir gcc -skip gcc/list_slow

  In all cases, batch_test.pl will execute whatever .run files it was
  told to execute, checks the output of each .run file, prints out if
  each test passed or failed, and summarizes the results across all
  tests. 


6) Changing test timeouts in the Build & Test(default 20 minutes)

	Modify TimeoutChanges to have the test and a number for minutes:

			job_quill_basic 35

7) Repeating tests more then once per test run in the Build & Test

	Modify RuncountChanges to have the test and a number for iterations:

			lib_chirpio 20

