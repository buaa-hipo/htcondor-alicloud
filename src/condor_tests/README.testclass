----------------------------------------------------------------------
INTRODUCTION
----------------------------------------------------------------------

Tests in the Condor test suite can belong to various "classes" or
categories.  These classes are used to manage tests to allow building
and/or runing certain logical subsets of all the tests.  For example,
if you only want to run very short running tests, you might define a
class called "quick", and all tests that execute quickly would be
added to that class.  Similarly, very long running tests that we only
want to attempt to execute once a week could go into a seperate test
class called "weekly" or "long".  Defining test classes will allow
test authors a lot of flexibility in deciding when test should be
run and potentially how it is displayed.


----------------------------------------------------------------------
DEFINING TEST CLASSES
----------------------------------------------------------------------

To define a test class, you need to add a "TESTCLASS_DECL()" rule to
Imakefile.common which declares the name you want to use.  This rule
allows our Makefiles to support "make [testclass]", such that all
tests you add to the given testclass will be built.  To add a test to
a given class, you add a "TESTCLASS()" imake rule for that test and
class to the appropriate Imakefile.  For help with imake files and
rules, see "README.imake".  The Condor imake build system is smart
enough to generate a file called "list_<classname>" that contains all
the testnames that belong to the given classname.  Additionally, it
generates a file called "list_testclass", which contains the names of
all the valid test classes currently in use.

We have decided to place all tests in one and only one of the classes
quick and long. The initial factor being used to separate them is the length
of time which the test takes to run on nmi-build18, a slow solaris 9
system. The initial limit is 5 minutes. This means that running a test
run of both list_quick and list_long will test each and every test
exactly one time.

The old list_quick which was used as a NWO framework test has been
reclassified to a new testclass list_framework.

All tests can additionally be placed in 0 or more of the other test classes.


----------------------------------------------------------------------
DESCRIPTION OF CURRENTLY USED TEST CLASSES
----------------------------------------------------------------------

quick        - very short-running tests
long	     - long-running tests that should run less frequently
local		 - tests for local universe
qquicknolink - Tests which do not link condor libraries for testing
			   32 bit binaries on 64 bit platforms and only running test
			   built with native 64 bit compilers in 64 bit mode
			   for cross testing( would like to be able to get
			   tests to build in 32 bit mode for more complete
			   testing(-m32 flag option needed).

TODO!!!
