#!/usr/bin/env perl
##**************************************************************
##
## Copyright (C) 1990-2007, Condor Team, Computer Sciences Department,
## University of Wisconsin-Madison, WI.
## 
## Licensed under the Apache License, Version 2.0 (the "License"); you
## may not use this file except in compliance with the License.  You may
## obtain a copy of the License at
## 
##    http://www.apache.org/licenses/LICENSE-2.0
## 
## Unless required by applicable law or agreed to in writing, software
## distributed under the License is distributed on an "AS IS" BASIS,
## WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
## See the License for the specific language governing permissions and
## limitations under the License.
##
##**************************************************************

use CondorTest;
use x_vm_utils;

$corename = 'job_vmu_network';
$testname = 'job_vmu_network';
$testdesc = 'VM universe networking test';

x_vm_utils::initialize($corename);

$started = sub
{
	CondorTest::debug("Job is running\n",1);
	my $ip;
	until ($ip =~ m/\d+\.\d+\.\d+\.\d+/) {
		sleep(1);
		$ip = x_vm_utils::get_data();
	}
	system("chmod 600 ../$corename.key");
	system("echo IT WORKED | " .
	           "ssh root\@$ip -o IdentityFile=../$corename.key " .
	                        "-o StrictHostKeyChecking=no " .
	                        "-o UserKnownHostsFile=/dev/null " .
	           "'cat > /tmp/file_from_ssh'");
};
$completed = sub
{
	CondorTest::debug("Job has completed\n",1);
	unless (x_vm_utils::check_output("IT WORKED")) {
		die "output check failed\n";
	}
};
CondorTest::RegisterExecute( $testname, $started );
CondorTest::RegisterExitedSuccess( $testname, $completed );

x_vm_utils::add_submit_command("vmware_should_transfer_files = yes");
x_vm_utils::add_submit_command("vmware_snapshot_disk = false");
x_vm_utils::add_submit_command("vm_networking = true");
x_vm_utils::add_submit_command("vm_networking_type = nat");
x_vm_utils::add_submit_command("periodic_remove = (time() - QDate) > 600");
$success = x_vm_utils::run_test($testname);

x_vm_utils::cleanup();

if( not $success )
{
	CondorTest::debug("$corename FAILED\n",1);
	exit(1);
}
CondorTest::debug("$corename SUCCESS\n",1);
exit(0);
