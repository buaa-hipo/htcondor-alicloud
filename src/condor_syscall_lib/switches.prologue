/***************************************************************
 *
 * Copyright (C) 1990-2007, Condor Team, Computer Sciences Department,
 * University of Wisconsin-Madison, WI.
 * 
 * Licensed under the Apache License, Version 2.0 (the "License"); you
 * may not use this file except in compliance with the License.  You may
 * obtain a copy of the License at
 * 
 *    http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 ***************************************************************/

/***********************************************************
**
** Stubs for all those system calls which don't effect the
** state of the open file table.
**
** Caution - "syscall_switches.c" is generated automatically, do not edit!
**         - edit "switches.prologue" or "syscall.tmpl" instead.
**
***********************************************************/

/* When this flags is defined, static and inline definitions
   of *stat will be killed by the header files.  We do this
   here so that we can use the same mechanism of include
   files as the rest of the condor source. */

#if defined(LINUX) || defined(Solaris)
#define CONDOR_KILLS_STAT_DEFINITIONS
#define CONDOR_KILLS_UNAME_DEFINITIONS
#endif

#include "condor_common.h"
#include "syscall_numbers.h"
#include "syscall_macros.h"

#include "condor_syscall_mode.h"
#include "file_table_interf.h"

#include "../condor_ckpt/file_state.h"
#include "../condor_ckpt/signals_control.h"
#include <iosfwd>

extern "C" int errno;

#if defined(DL_EXTRACT)
	#include <dlfcn.h>	/* dlopen and dlsym */
#endif

#if defined(HPUX)
	#define FORK _FORK_sys
	#define PIPE _PIPE_sys
#endif

#if defined(LINUX) 
	#define PIPE __PIPE
	#define FORK __FORK
	#define GETEGID  __GETEGID
	#define GETPPID  __GETPPID
	#define GETEUID  __GETEUID

	/* These constants are needed for indirect socket calls.  They
		live in /usr/include/linux/net.h.  We can't just include things
		in /usr/include/linux, because they tend to conflict in general
		with things in /usr/include/sys.  Bleh! Hopefully, in the name of
		binary compatibility, they will not change in future versions.
	*/

	#define SYS_SOCKET      1
	#define SYS_BIND        2
	#define SYS_CONNECT     3
	#define SYS_LISTEN      4
	#define SYS_ACCEPT      5
	#define SYS_GETSOCKNAME 6
	#define SYS_GETPEERNAME 7
	#define SYS_SOCKETPAIR  8
	#define SYS_SEND        9
	#define SYS_RECV        10
	#define SYS_SENDTO      11
	#define SYS_RECVFROM    12
	#define SYS_SHUTDOWN    13
	#define SYS_SETSOCKOPT  14
	#define SYS_GETSOCKOPT  15
	#define SYS_SENDMSG     16
	#define SYS_RECVMSG     17
	
	/* Glibc has an entry point for getdirentries, but in order to get the
	   prototype you have to define a bunch of junk that we dont' turn on.
	   We'll just define it ourselves on Linux */ 
extern "C" {
	ssize_t getdirentries(int fd, char *buf, size_t nbytes,  off_t *basep);
}
#endif

/* Get rid of the mapping from access to access_euid in the syscall library */
#ifdef access
#	undef access
#endif

extern "C" {

