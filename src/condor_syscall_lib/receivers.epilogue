/***************************************************************
 *
 * Copyright (C) 1990-2007, Condor Team, Computer Sciences Department,
 * University of Wisconsin-Madison, WI.
 * 
 * Licensed under the Apache License, Version 2.0 (the "License"); you
 * may not use this file except in compliance with the License.  You may
 * obtain a copy of the License at
 * 
 *    http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 ***************************************************************/

	default:
	{
		condor_errno_t terrno;

		/* consume arguments */
		syscall_sock->end_of_message();

		errno = 0;
		rval = CONDOR_NotSupported( condor_sysnum );
		terrno = (condor_errno_t)errno;
		dprintf( D_SYSCALLS, "\trval = %d, errno = %d\n", rval, (int)terrno );

		syscall_sock->encode();
		assert( syscall_sock->code(rval) );
		assert( syscall_sock->code(terrno) );
		assert( syscall_sock->end_of_message() );;
		return 0;
	}


}	/* End of switch on system call number */
}	/* End of do_REMOTE_syscall() procedure */

int
CONDOR_NotSupported( int condor_sysnum,  ... )
{
	job_report_store_error( "system call not supported by Condor",
	                      _condor_syscall_name(condor_sysnum) );

	errno = ENOSYS;
	return -1;
}

int
CONDOR_Ignored( int condor_sysnum,  ... )
{
	dprintf(
		D_SYSCALLS,
		"%s - system call not supported by Condor - IGNORED!",
		_condor_syscall_name(condor_sysnum)
	);
	return 0;
}
