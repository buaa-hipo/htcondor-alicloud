<?xml version="1.0" encoding="utf-8"?>
<!--
/*
 * Copyright 2000-2012 Red Hat, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
-->
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:hdp="http://hadoop.aviary.grid.redhat.com" xmlns:mrg="http://common.aviary.grid.redhat.com" targetNamespace="http://hadoop.aviary.grid.redhat.com">
	<xs:import namespace="http://common.aviary.grid.redhat.com" schemaLocation="aviary-common.xsd"/>
	<!-- declare message-level elements using anonymous complex types for simpler generated types -->
	<xs:simpleType name="HadoopStateType">
		<xs:restriction base="xs:string">
			<xs:enumeration value="PENDING"/>
			<xs:enumeration value="RUNNING"/>
			<xs:enumeration value="EXITING"/>
			<xs:enumeration value="UNMANAGED"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:complexType name="HadoopID">
		<xs:sequence>
			<xs:element name="id" type="xs:string" minOccurs="0"/>
			<xs:element name="ipc" type="xs:string" minOccurs="0"/>
			<xs:element name="http" type="xs:string" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="HadoopNameNodeStart">
		<xs:sequence>
			<!-- path to a versioned Hadoop tar/zip binary dist file -->
			<xs:element name="bin_file" type="xs:string" minOccurs="0"/>
			<xs:element name="owner" type="xs:string" minOccurs="0"/>
			<xs:element name="description" type="xs:string" minOccurs="0"/>
			<!--reference to an unmanaged NameNode -->
			<xs:element name="unmanaged" type="hdp:HadoopID" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="HadoopStart">
		<xs:sequence>
			<!-- a dependent reference to another Hadoop entity in the cluster -->
			<xs:element name="ref" type="hdp:HadoopID"/>
			<!-- path to a versioned Hadoop tar/zip binary dist file -->
			<xs:element name="bin_file" type="xs:string" minOccurs="0"/>
			<xs:element name="owner" type="xs:string" minOccurs="0"/>
			<xs:element name="description" type="xs:string" minOccurs="0"/>
			<xs:element name="count" type="xs:int" minOccurs="0" default="1"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="HadoopStartResponse">
		<xs:sequence>
			<xs:element name="ref" type="hdp:HadoopID" minOccurs="0"/>
			<xs:element name="status" type="mrg:Status"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="HadoopStop">
		<xs:sequence>
			<xs:element name="refs" type="hdp:HadoopID" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
		<xs:complexType name="HadoopStopResult">
		<xs:sequence>
			<xs:element name="ref" type="hdp:HadoopID" minOccurs="0"/>
			<xs:element name="status" type="mrg:Status"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="HadoopStopResponse">
		<xs:sequence>
			<xs:element name="results" type="hdp:HadoopStopResult" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="status" type="mrg:Status"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="HadoopQuery">
		<xs:sequence>
			<xs:element name="refs" type="hdp:HadoopID" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="HadoopQueryResult">
		<xs:sequence>
			<xs:element name="ref" type="hdp:HadoopID"/>
			<xs:element name="parent" type="hdp:HadoopID"/>
			<xs:element name="owner" type="xs:string"/>
			<xs:element name="description" type="xs:string"/>
			<xs:element name="submitted" type="xs:int"/>
			<xs:element name="uptime" type="xs:int"/>
			<xs:element name="state" type="hdp:HadoopStateType"/>
			<xs:element name="status" type="mrg:Status"/>
			<xs:element name="bin_file" type="xs:string"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="HadoopQueryResponse">
		<xs:sequence>
			<xs:element name="results" type="hdp:HadoopQueryResult" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="status" type="mrg:Status"/>
		</xs:sequence>
	</xs:complexType>
	<!-- NameNode -->
	<xs:element name="StartNameNode" type="hdp:HadoopNameNodeStart"/>
	<xs:element name="StartNameNodeResponse" type="hdp:HadoopStartResponse"/>
	<xs:element name="StopNameNode" type="hdp:HadoopStop"/>
	<xs:element name="StopNameNodeResponse" type="hdp:HadoopStopResponse"/>
	<xs:element name="GetNameNode" type="hdp:HadoopQuery"/>
	<xs:element name="GetNameNodeResponse" type="hdp:HadoopQueryResponse"/>
	<!-- these all follow the same type pattern so reuse -->
	<!-- DataNode -->
	<xs:element name="StartDataNode" type="hdp:HadoopStart"/>
	<xs:element name="StartDataNodeResponse" type="hdp:HadoopStartResponse"/>
	<xs:element name="StopDataNode" type="hdp:HadoopStop"/>
	<xs:element name="StopDataNodeResponse" type="hdp:HadoopStopResponse"/>
	<xs:element name="GetDataNode" type="hdp:HadoopQuery"/>
	<xs:element name="GetDataNodeResponse" type="hdp:HadoopQueryResponse"/>
	<!-- JobTracker -->
	<xs:element name="StartJobTracker" type="hdp:HadoopStart"/>
	<xs:element name="StartJobTrackerResponse" type="hdp:HadoopStartResponse"/>
	<xs:element name="StopJobTracker" type="hdp:HadoopStop"/>
	<xs:element name="StopJobTrackerResponse" type="hdp:HadoopStopResponse"/>
	<xs:element name="GetJobTracker" type="hdp:HadoopQuery"/>
	<xs:element name="GetJobTrackerResponse" type="hdp:HadoopQueryResponse"/>
	<!-- TaskTracker -->
	<xs:element name="StartTaskTracker" type="hdp:HadoopStart"/>
	<xs:element name="StartTaskTrackerResponse" type="hdp:HadoopStartResponse"/>
	<xs:element name="StopTaskTracker" type="hdp:HadoopStop"/>
	<xs:element name="StopTaskTrackerResponse" type="hdp:HadoopStopResponse"/>
	<xs:element name="GetTaskTracker" type="hdp:HadoopQuery"/>
	<xs:element name="GetTaskTrackerResponse" type="hdp:HadoopQueryResponse"/>
</xs:schema>
