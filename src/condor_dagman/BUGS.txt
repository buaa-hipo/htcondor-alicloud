- Given a DAG:
    job test test.submit
    script post test logargs $RETURN --foo=$RETURN $RETURN
  Assuming my test.submit job returns 1, the script "logargs" gets
  arguments of "1" "--foo=$RETURN" "1".  This is surprising.

- submit files that queue multiple jobs are handled *very* poorly --
  they're not detected and rejected, and what's more, they result in
  dagman thinking the submit failed, so it re-submits, resulting in
  tons of bogus jobs in the queue which dagman knows nothing about
  [see astro:/scratch/pfc/condor/dagman-tests/extra-jobs].

- PRE scripts with $RETURN in their DAG spec aren't being flagged as invalid

- If a second instance of a dag is submitted while the first is still
  running, it will irretrievably hose the first (and be hosed in turn)

- If a second instance of a dag is submitted after the first is done,
  it *removes* the job log from the first dag before starting (because
  it currently has to avoid being confused by the first dags events),
  but it shouldn't do this!

? what happens if DAGMan is paused and someone or the schedd tries to
shut it down?  will ignoring it lead to trouble (i.e. hard kill)?  can
it be handled in mid-pause?  think...

- Dagman probably behaves badly if/when jobs are re-queued after
  termination (e.g., w/onexiteremove or onexithold... or may even
  leaveinqueue=false)

- if condor_submit hangs (which it can), DAGMan hangs -- we need a timeout
