#! /usr/bin/perl -w
##**************************************************************
##
## Copyright (C) 1990-2007, Condor Team, Computer Sciences Department,
## University of Wisconsin-Madison, WI.
## 
## Licensed under the Apache License, Version 2.0 (the "License"); you
## may not use this file except in compliance with the License.  You may
## obtain a copy of the License at
## 
##    http://www.apache.org/licenses/LICENSE-2.0
## 
## Unless required by applicable law or agreed to in writing, software
## distributed under the License is distributed on an "AS IS" BASIS,
## WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
## See the License for the specific language governing permissions and
## limitations under the License.
##
##**************************************************************

use strict;

my $netdev = "";

# Update the module include path
BEGIN
{
    my $Dir = $0;
    if ( $Dir =~ /(.*)\/.*/ )
    {
	push @INC, "$1";
    }
}
use HawkeyePublish;
use HawkeyeLib;

# My Hawkeye object
my $Hawkeye;

main();

# Main
sub main
{
    $| = 1;
    Init();
    RunIt();
}

# Initialize
sub Init
{
    HawkeyeLib::DoConfig( );

    $Hawkeye = HawkeyePublish->new;
    $Hawkeye->Quiet( 1 );
    $Hawkeye->AutoIndexSet( 1 );

}

# ***********************************************
# Do the actual work
sub RunIt
{
    my $Hash = HawkeyeHash->new( \$Hawkeye, "" );

    ### Look up # of open file descriptors, etc
    if ( $ENV{OSTYPE} =~ /linux/i )
    {
	my $ProcFile = "/proc/sys/fs/file-nr";
	if ( ! open( PROC, $ProcFile ) )
	{
	    print STDERR "Can't open $ProcFile\n";
	    exit 1;
	}
	while( <PROC> )
	{
	    my ( $NrFiles, $NrFreeFiles, $MaxFiles ) = split;
	    $Hash->Add( "Limit", HawkeyePublish::TypeNumber, $MaxFiles );
	    $Hash->Add( "MaxUsed", HawkeyePublish::TypeNumber, $NrFiles );
	    $Hash->Add( "Available", HawkeyePublish::TypeNumber,
			$MaxFiles - ( $NrFiles - $NrFreeFiles ) );
	}
	$Hash->Store( );
    }

    $Hawkeye->Publish( );
}
