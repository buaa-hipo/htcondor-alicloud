diff -u -r org.glite.ce.blahp-orig/config/blah.config.template org.glite.ce.blahp/config/blah.config.template
--- org.glite.ce.blahp-orig/config/blah.config.template	2011-05-23 10:03:09.000000000 -0500
+++ org.glite.ce.blahp/config/blah.config.template	2016-12-15 11:49:12.047541333 -0600
@@ -14,6 +14,10 @@
 #be enabled only if non-limited proxies are used for proxy renewal.
 blah_delegate_renewed_proxies=no
 
+#Set to no if you wish the blahp to create a new limited proxy from
+#the given proxy (if any) to give to the job.
+blah_disable_limited_proxy=yes
+
 #Path where PBS executables are located 
 pbs_binpath=/usr/pbs/bin
 
Only in org.glite.ce.blahp-p2a/config: blah.config.template.orig
diff -u -r org.glite.ce.blahp-orig/src/server.c org.glite.ce.blahp/src/server.c
--- org.glite.ce.blahp-orig/src/server.c	2016-12-15 11:48:23.865803727 -0600
+++ org.glite.ce.blahp-/src/server.c	2016-12-15 12:06:08.435588467 -0600
@@ -178,6 +178,7 @@
 int require_proxy_on_submit = FALSE;
 int disable_wn_proxy_renewal = FALSE;
 int disable_proxy_user_copy = FALSE;
+int disable_limited_proxy = FALSE;
 int synchronous_termination = FALSE;
 
 static char *mapping_parameter[MEXEC_PARAM_COUNT];
@@ -373,6 +374,7 @@
 	enable_condor_glexec = config_test_boolean(config_get("blah_enable_glexec_from_condor",blah_config_handle));
 	disable_wn_proxy_renewal = config_test_boolean(config_get("blah_disable_wn_proxy_renewal",blah_config_handle));
 	disable_proxy_user_copy = config_test_boolean(config_get("blah_disable_proxy_user_copy",blah_config_handle));
+        disable_limited_proxy = config_test_boolean(config_get("blah_disable_limited_proxy",blah_config_handle));
 				
 	if (enable_condor_glexec)
 	{
@@ -1050,7 +1052,7 @@
 			}
 		}
 	}
-	else if (proxyname != NULL)
+	else if ((proxyname) != NULL && (!disable_limited_proxy))
 	{
 		/* not in glexec mode: need to limit the proxy */
 		if((proxynameNew = limit_proxy(proxyname, NULL)) == NULL)
@@ -1889,14 +1891,17 @@
 			case 1: /* job queued: copy the proxy locally */
 				if (!use_mapping)
 				{
-					limit_proxy(proxyFileName, old_proxy); /*FIXME: should check if limited proxies are enabled? */ 
-					resultLine = make_message("%s 0 Proxy\\ renewed", reqId);
+				  if (!disable_limited_proxy)
+				    {
+					limit_proxy(proxyFileName, old_proxy);
+				    }
+				  resultLine = make_message("%s 0 Proxy\\ renewed", reqId);
 				}
 				else
 				{
 					exe_command.delegation_type = atoi(argv[CMD_RENEW_PROXY_ARGS + 1 + MEXEC_PARAM_DELEGTYPE]);
 					exe_command.delegation_cred = argv[CMD_RENEW_PROXY_ARGS + 1 + MEXEC_PARAM_DELEGCRED];
-					if (use_glexec)
+					if (use_glexec || disable_limited_proxy)
 					{
 						exe_command.source_proxy = argv[CMD_RENEW_PROXY_ARGS + 1 + MEXEC_PARAM_SRCPROXY];
 					} else {
@@ -2014,9 +2019,16 @@
 
 	if (workernode != NULL && strcmp(workernode, ""))
 	{
-		if(!use_glexec)
+        	if (!use_glexec)
 		{
+		  if (disable_limited_proxy)
+		    {
+			proxyFileNameNew = strdup(proxyFileName);
+		    }
+		  else
+		    {
 			proxyFileNameNew = limit_proxy(proxyFileName, NULL);
+		    }
 		}
 		else
 			proxyFileNameNew = strdup(argv[CMD_SEND_PROXY_TO_WORKER_NODE_ARGS + MEXEC_PARAM_SRCPROXY + 1]);
